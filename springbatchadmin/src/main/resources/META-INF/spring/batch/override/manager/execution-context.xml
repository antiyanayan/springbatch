<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Task Executor -->
    <task:executor id="jobLauncherTaskExecutor" pool-size="1" queue-capacity="100" keep-alive="60"
        rejection-policy="CALLER_RUNS" />

    <!-- JobLauncher -->
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
        <property name="taskExecutor" ref="jobLauncherTaskExecutor" />
    </bean>

    <!-- Bean representing the Job Repository -->
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="tablePrefix" value="${batch.job.repository.table.prefix:BATCH_}" />
        <property name="dataSource" ref="jobRepositoryDataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="isolationLevelForCreate" value="ISOLATION_READ_COMMITTED" />
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="jobRepositoryDataSource" />
    </bean>

    <bean id="resourceService" class="org.springframework.batch.admin.web.resources.DefaultResourceService">
        <property name="servletPath" value="/jobs/" />
    </bean>

    <!-- Bean representing the Job Explorer -->
    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
        p:table-prefix="${batch.job.repository.table.prefix:BATCH_}" p:dataSource-ref="jobRepositoryDataSource" />

    <bean id="jobService" class="org.springframework.batch.admin.service.SimpleJobServiceFactoryBean"
        p:table-prefix="${batch.job.repository.table.prefix:BATCH_}">
        <property name="jobRepository" ref="jobRepository" />
        <property name="jobLauncher" ref="jobLauncher" />
        <property name="jobLocator" ref="jobRegistry" />
        <property name="dataSource" ref="jobRepositoryDataSource" />
    </bean>

    <!-- Bean responsible for Loading Jobs -->
    <bean id="jobLoader" class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
        <property name="applicationContextFactories">
            <bean class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean">
                <property name="resources" value="classpath*:spring/las-jobs/jobs/*.xml" />
            </bean>
        </property>
        <property name="jobLoader">
            <bean class="org.springframework.batch.core.configuration.support.DefaultJobLoader">
                <property name="jobRegistry" ref="jobRegistry" />
            </bean>
        </property>
    </bean>

    <!-- Profile 'production' -->
    <beans profile="production">
        <!-- Oracle DataSource [Spring Batch Job Repository] -->
        <bean id="jobRepositoryDataSource" class="oracle.jdbc.pool.OracleDataSource">
            <property name="URL" value="#{jdbcProperties['lasbatch.jdbc.url']}" />
            <property name="loginTimeout" value="5" />
            <property name="user" value="#{jdbcProperties['lasbatch.jdbc.username']}" />
            <property name="password" value="#{jdbcProperties['lasbatch.jdbc.password']}" />
        </bean>
    </beans>

    <!-- H2 Profile -->
    <beans profile="local">
        <!-- H2 DataSource [Spring Batch Job Repository] -->
        <jdbc:embedded-database id="jobRepositoryDataSource" type="H2" generate-name="false"
            database-name="spring-batch">
            <jdbc:script location="classpath:/org/springframework/batch/core/schema-drop-h2.sql" />
            <jdbc:script location="classpath:/org/springframework/batch/core/schema-h2.sql" />
        </jdbc:embedded-database>
    </beans>
    
    <!-- Profile 'dss' -->
	<beans profile="dss">
		<!-- Oracle DataSource [Spring Batch Job Repository] -->
		<bean id="jobRepositoryDataSource" class="oracle.jdbc.pool.OracleDataSource">
			<property name="URL" value="#{jdbcProperties['lasbatch.jdbc.url']}" />
			<property name="loginTimeout" value="5" />
			<property name="user" value="#{jdbcProperties['lasbatch.jdbc.username']}" />
			<property name="password" value="#{jdbcProperties['lasbatch.jdbc.password']}" />
		</bean>
	</beans>
    
    <!-- Profile 'pta' -->
    <beans profile="pta">
        <!-- Oracle DataSource [Spring Batch Job Repository] -->
        <bean id="jobRepositoryDataSource" class="oracle.jdbc.pool.OracleDataSource">
            <property name="URL" value="#{jdbcProperties['lasbatch.jdbc.url']}" />
            <property name="loginTimeout" value="5" />
            <property name="user" value="#{jdbcProperties['lasbatch.jdbc.username']}" />
            <property name="password" value="#{jdbcProperties['lasbatch.jdbc.password']}" />
        </bean>
    </beans>
    
    <!-- profile for develop environment in OTTO network -->
	<beans profile="develop">
		<!-- Oracle DataSource [Spring Batch Job Repository] -->
		<bean id="jobRepositoryDataSource" class="oracle.jdbc.pool.OracleDataSource">
			<property name="URL" value="#{jdbcProperties['lasbatch.jdbc.url']}" />
			<property name="loginTimeout" value="5" />
			<property name="user" value="#{jdbcProperties['lasbatch.jdbc.username']}" />
			<property name="password" value="#{jdbcProperties['lasbatch.jdbc.password']}" />
		</bean>
	</beans>

</beans> 