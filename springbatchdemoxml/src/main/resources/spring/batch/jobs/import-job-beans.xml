<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<import resource="../config/spring-context.xml" />
	<import resource="../config/spring-datasource.xml" />
	
	<bean id="order" class="com.springtuts.springbatchdemo.jobdemo.Order" scope="prototype" />
	<bean id="itemProcessor" class="com.springtuts.springbatchdemo.jobdemo.OrderItemProcessor" />
	
	<batch:job id="orderProcessJob" job-repository="jobRepository" restartable="true">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="orderCsvItemReader" processor="itemProcessor" writer="jdbcItemWriter" commit-interval="2"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id = "orderCsvItemReader" class = "org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:spring/batch/data/input/orders.csv"/>
		<property name="linesToSkip" value="1"/>
		<property name="strict" value="true"/>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class = "org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="orderId,item,address,supplier,price"/>
						<property name="delimiter" value=";"/>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.springtuts.springbatchdemo.jobdemo.OrderFieldSetMapper"></bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="jdbcItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref = "dataSource"/>
		<property name="sql">
	  		<value>
            	insert into orders(orderId, item, address, supplier, price) values(:orderId, :item, :address, :supplier, :price)
	  		</value>
		</property>
		<property name="itemSqlParameterSourceProvider">
			<bean class ="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
		</property>
	</bean>
</beans>